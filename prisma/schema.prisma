// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String    @default("New User")
  description   String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  password      String? //hashed

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Article Article[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model EmailVerifications {
  email     String   @id
  username  String
  updatedAt DateTime @default(now()) @updatedAt
  password  String
  code      String   @default(uuid())
}

model Article {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  description String
  content     Json
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  tags        String[]
}

model Topic {
  name String @id
  count Int @default(0)
}